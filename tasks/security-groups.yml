---
- set_fact:
    security_group_id: "{{ dict() }}"

- { include: create/security-group.yml, role_name: management }
- { include: create/security-group.yml, role_name: managed }
- { include: create/security-group.yml, role_name: inbound }
- { include: create/security-group.yml, role_name: application }
- { include: create/security-group.yml, role_name: cache }
- { include: create/security-group.yml, role_name: database,       when: "'database' in required_systems" }
- { include: create/security-group.yml, role_name: outbound,       when: "'outbound' in required_systems" }
- { include: create/security-group.yml, role_name: aggregator,     when: "'aggregator' in required_systems" }
- { include: create/security-group.yml, role_name: logs,           when: "'logs' in required_systems" }
- { include: create/security-group.yml, role_name: metrics,        when: "'metrics' in required_systems" }
- { include: create/security-group.yml, role_name: build,          when: "'build' in required_systems" }
- { include: create/security-group.yml, role_name: preview,        when: "'preview' in required_systems" }

- name: "No Management, Exposing Managed Systems"
  set_fact:
    security_group: "{{ security_group.update(no_management) }}{{ security_group }}"
  when: "'management' not in required_systems"

- { include: create/security-group.yml, role_name: managed, when: "'management' not in required_systems" }

- name: "No Inbound Proxies, Exposing Application Servers"
  set_fact:
    security_group: "{{ security_group.update(no_inbound) }}{{ security_group }}"
  when: "'inbound' not in required_systems"

- { include: create/security-group.yml, role_name: application, when: "'inbound' not in required_systems" }
